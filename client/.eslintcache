[{"D:\\Projects\\Athavani\\client\\src\\index.js":"1","D:\\Projects\\Athavani\\client\\src\\reportWebVitals.js":"2","D:\\Projects\\Athavani\\client\\src\\reducer\\index.js":"3","D:\\Projects\\Athavani\\client\\src\\App.js":"4","D:\\Projects\\Athavani\\client\\src\\reducer\\posts.js":"5","D:\\Projects\\Athavani\\client\\src\\style.js":"6","D:\\Projects\\Athavani\\client\\src\\actions\\posts.js":"7","D:\\Projects\\Athavani\\client\\src\\components\\MailForm\\MailForm.js":"8","D:\\Projects\\Athavani\\client\\src\\components\\Form\\Form.js":"9","D:\\Projects\\Athavani\\client\\src\\components\\Posts\\Posts.js":"10","D:\\Projects\\Athavani\\client\\src\\constants\\actionTypes.js":"11","D:\\Projects\\Athavani\\client\\src\\actions\\mails.js":"12","D:\\Projects\\Athavani\\client\\src\\components\\Form\\style.js":"13","D:\\Projects\\Athavani\\client\\src\\components\\Posts\\style.js":"14","D:\\Projects\\Athavani\\client\\src\\api\\index.js":"15","D:\\Projects\\Athavani\\client\\src\\components\\Posts\\Post\\Post.js":"16","D:\\Projects\\Athavani\\client\\src\\components\\Posts\\Post\\password.js":"17","D:\\Projects\\Athavani\\client\\src\\components\\Posts\\Post\\style.js":"18"},{"size":767,"mtime":1609984789030,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1609984789032,"results":"21","hashOfConfig":"20"},{"size":125,"mtime":1609984789031,"results":"22","hashOfConfig":"20"},{"size":1609,"mtime":1610010720797,"results":"23","hashOfConfig":"20"},{"size":682,"mtime":1609984789031,"results":"24","hashOfConfig":"20"},{"size":529,"mtime":1609984789032,"results":"25","hashOfConfig":"20"},{"size":1369,"mtime":1609984789006,"results":"26","hashOfConfig":"20"},{"size":1105,"mtime":1609984789015,"results":"27","hashOfConfig":"20"},{"size":4414,"mtime":1609984789014,"results":"28","hashOfConfig":"20"},{"size":809,"mtime":1609984789018,"results":"29","hashOfConfig":"20"},{"size":213,"mtime":1609984789029,"results":"30","hashOfConfig":"20"},{"size":346,"mtime":1609984789006,"results":"31","hashOfConfig":"20"},{"size":1219,"mtime":1609984789014,"results":"32","hashOfConfig":"20"},{"size":278,"mtime":1609984789019,"results":"33","hashOfConfig":"20"},{"size":620,"mtime":1609984789007,"results":"34","hashOfConfig":"20"},{"size":4950,"mtime":1610024726281,"results":"35","hashOfConfig":"20"},{"size":41,"mtime":1609984789018,"results":"36","hashOfConfig":"20"},{"size":1927,"mtime":1610022405351,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ogac0r",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\Athavani\\client\\src\\index.js",[],["79","80"],"D:\\Projects\\Athavani\\client\\src\\reportWebVitals.js",[],"D:\\Projects\\Athavani\\client\\src\\reducer\\index.js",[],"D:\\Projects\\Athavani\\client\\src\\App.js",["81","82","83"],"import logo from './logo.svg';\r\nimport react, { useState, useEffect } from 'react';\r\nimport { Container, AppBar, Typography, Grid, Grow } from '@material-ui/core';\r\nimport memories from './Images/memories.png'\r\nimport Form from './components/Form/Form';\r\nimport Posts from './components/Posts/Posts';\r\nimport useStyles from './style';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getPosts } from './actions/posts';\r\nimport MailForm from './components/MailForm/MailForm';\r\n\r\nfunction App() {\r\n\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const [currentId, setCurrentId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPosts())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <AppBar className={classes.appBar} position=\"static\" style={{background: \"radial-gradient(orange 40%,transparent)\"}} color=\"inherit\">\r\n        <Typography className={classes.heading} variant=\"h4\" align=\"center\">Memories</Typography>\r\n        <img className={classes.image} height=\"50\" src={memories} ></img>\r\n      </AppBar>\r\n      <Grow in>\r\n        <Container>\r\n          <Grid container className={classes.mainContainer} justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n            <Grid item xs={12} sm={7}>\r\n              <Posts setCurrentId={setCurrentId} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\r\n              <MailForm />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Grow>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Projects\\Athavani\\client\\src\\reducer\\posts.js",["84"],"import {CREATE,FETCH_ALL,DELETE,UPDATE,LIKE_POST} from '../constants/actionTypes';\r\nexport default (posts=[],action) =>{\r\n    switch (action.type) {\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n        case DELETE:\r\n                return posts.filter((post)=> post._id !==action.payload);    \r\n        case UPDATE:\r\n                return posts.map((post)=>post._id === action.payload._id ? action.payload:post); \r\n        case LIKE_POST:\r\n                return posts.map((post)=>post._id === action.payload._id ? action.payload:post);    \r\n        case CREATE:\r\n            return [...posts,action.payload];\r\n        default:\r\n            return posts;\r\n    }\r\n}","D:\\Projects\\Athavani\\client\\src\\style.js",[],"D:\\Projects\\Athavani\\client\\src\\actions\\posts.js",[],"D:\\Projects\\Athavani\\client\\src\\components\\MailForm\\MailForm.js",["85","86","87","88","89"],"import { Button, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addMail } from \"../../actions/mails\";\r\n\r\nimport './Style.css';\r\nconst MailForm = () => {\r\n    const [mailPostData, setMailPostData] = useState({ email: '' });\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        dispatch(addMail(mailPostData));\r\n        clear();\r\n    }\r\n    const clear = () => {\r\n        setMailPostData({ email: '' });\r\n    }\r\n\r\n    return (\r\n        <Paper style={{\r\n            marginTop: '10px',\r\n            borderRadius: '12px',\r\n            background: 'linear-gradient(180deg, rgb(255 192 146 / 85%) 48%, rgb(253 226 52 / 0.71) 100%)'\r\n        }}>\r\n    <div id=\"container\">\r\n\t<h2>Subscribe</h2>\r\n\t<p>Stay updated with our newsletter</p>\r\n\t    <form>\r\n\t\t<input type=\"email\" placeholder=\"Type your Email\" required/>\r\n\t\t\t<br/>\r\n\t\t<button>Subscribe</button>\r\n\t    </form>\r\n        </div>\r\n        </Paper>\r\n    );\r\n}\r\nexport default MailForm;","D:\\Projects\\Athavani\\client\\src\\components\\Form\\Form.js",[],"D:\\Projects\\Athavani\\client\\src\\components\\Posts\\Posts.js",[],"D:\\Projects\\Athavani\\client\\src\\constants\\actionTypes.js",[],"D:\\Projects\\Athavani\\client\\src\\actions\\mails.js",[],"D:\\Projects\\Athavani\\client\\src\\components\\Form\\style.js",[],"D:\\Projects\\Athavani\\client\\src\\components\\Posts\\style.js",[],"D:\\Projects\\Athavani\\client\\src\\api\\index.js",[],"D:\\Projects\\Athavani\\client\\src\\components\\Posts\\Post\\Post.js",["90","91","92","93","94","95"],"import React,{useState} from 'react'\r\nimport useStyles from './style';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n  Modal,\r\n  TextField,\r\n  Snackbar,\r\n  IconButton,\r\n  withStyles,\r\n  Backdrop,\r\n} from \"@material-ui/core\";\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useDispatch} from 'react-redux';\r\nimport {deletePost,likePost} from '../../../actions/posts';\r\nimport dotenv from 'dotenv';\r\nimport {password1} from './password';\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n  dotenv.config();\r\n\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n  const [open1, setOpen1] = useState(false);\r\n  const [isError,setIsError] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n      setOpen(false);\r\n      setIsError(false);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    console.log(password);\r\n    if (password === password1) { \r\n     dispatch(deletePost(post._id));\r\n     handleClose();\r\n    } else {\r\n      setOpen(false);\r\n      setIsError(true);\r\n    }\r\n  };\r\n  const toggleContent = () =>{\r\n    var x = document.getElementById(\"cardContent\");\r\n  if (x.style.display === \"none\") {\r\n    x.style.display = \"block\";\r\n    document.getElementById(\"Arrow\").innerHTML = \"Show Less\";\r\n  } else {\r\n    x.style.display = \"none\";\r\n    document.getElementById(\"Arrow\").innerHTML = \"READ MORE\";\r\n  }\r\n  };\r\n\r\n  const body = (\r\n    <div className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">\r\n        <center>Please Enter Admin Password</center>\r\n      </h2>\r\n      <TextField\r\n        name=\"message\"\r\n        variant=\"outlined\"\r\n        label=\"Enter Password\"\r\n        type=\"password\"\r\n        style={{ marginBottom: \"1.5rem\" }}\r\n        className={classes.customInput}\r\n        fullWidth\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        className={classes.paperButton}\r\n        onClick={handleSubmit}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n    return(\r\n      <>\r\n        <Card className={classes.card}>\r\n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title} />\r\n            <div className={classes.overlay}>\r\n                <Typography variant=\"h6\">{post.creator}</Typography>\r\n                <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n            </div>\r\n\r\n\r\n      <div className={classes.overlay2}>\r\n        <Button\r\n          style={{ color: \"white\" }}\r\n          size=\"small\"\r\n          onClick={() => setCurrentId(post._id)}\r\n        >\r\n          <MoreHorizIcon fontSize=\"default\" />\r\n        </Button>\r\n      </div>\r\n      <div className={classes.details}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          {post.tags.map((tag) => `#${tag} `)}\r\n        </Typography>\r\n      </div>\r\n      <Typography className={classes.title} variant=\"h5\" gutterBottom>\r\n        {post.title}\r\n      </Typography>\r\n      <CardContent id=\"cardContent\" className={classes.cardContent}>\r\n        <Typography gutterBottom>{post.message}</Typography>\r\n      </CardContent> \r\n      <Button size=\"small\" color=\"primary\" onClick={toggleContent} id='Arrow'>\r\n          <ArrowDownwardIcon/>\r\n          Read more...\r\n        </Button>\r\n      <CardActions className={classes.cardActions}>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => dispatch(likePost(post._id))}\r\n        >\r\n          <ThumbUpAltIcon fontSize=\"small\" style={{ paddingRight: \"5\" }} />\r\n          LIKE &nbsp;\r\n          {post.likeCount}\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\" onClick={handleOpen}>\r\n          <DeleteIcon fontSize=\"small\" />\r\n          Delete\r\n        </Button>\r\n        \r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          {body}\r\n        </Modal>\r\n      </CardActions>\r\n    </Card>\r\n     { isError &&   \r\n      (\r\n        <Backdrop open={isError} onClick={handleClose} className={classes.overlayerror}>\r\n           <Alert severity=\"error\" onClose={handleClose} className={classes.overlay2}> Incorrect Password, cannot delete memory</Alert>\r\n       </Backdrop>\r\n          )}\r\n       </>\r\n  );\r\n};\r\n\r\nexport default Post;","D:\\Projects\\Athavani\\client\\src\\components\\Posts\\Post\\password.js",[],"D:\\Projects\\Athavani\\client\\src\\components\\Posts\\Post\\style.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":12},{"ruleId":"100","severity":1,"message":"104","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":27,"column":9,"nodeType":"107","endLine":27,"endColumn":68},{"ruleId":"108","severity":1,"message":"109","line":2,"column":1,"nodeType":"110","endLine":17,"endColumn":2},{"ruleId":"100","severity":1,"message":"111","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":16},{"ruleId":"100","severity":1,"message":"112","line":1,"column":18,"nodeType":"102","messageId":"103","endLine":1,"endColumn":22},{"ruleId":"100","severity":1,"message":"113","line":1,"column":31,"nodeType":"102","messageId":"103","endLine":1,"endColumn":40},{"ruleId":"100","severity":1,"message":"114","line":1,"column":42,"nodeType":"102","messageId":"103","endLine":1,"endColumn":52},{"ruleId":"100","severity":1,"message":"115","line":11,"column":11,"nodeType":"102","messageId":"103","endLine":11,"endColumn":23},{"ruleId":"100","severity":1,"message":"116","line":12,"column":3,"nodeType":"102","messageId":"103","endLine":12,"endColumn":11},{"ruleId":"100","severity":1,"message":"117","line":13,"column":3,"nodeType":"102","messageId":"103","endLine":13,"endColumn":13},{"ruleId":"100","severity":1,"message":"118","line":14,"column":3,"nodeType":"102","messageId":"103","endLine":14,"endColumn":13},{"ruleId":"100","severity":1,"message":"119","line":23,"column":10,"nodeType":"102","messageId":"103","endLine":23,"endColumn":20},{"ruleId":"100","severity":1,"message":"120","line":42,"column":10,"nodeType":"102","messageId":"103","endLine":42,"endColumn":15},{"ruleId":"100","severity":1,"message":"121","line":42,"column":17,"nodeType":"102","messageId":"103","endLine":42,"endColumn":25},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Button' is defined but never used.","'Grid' is defined but never used.","'TextField' is defined but never used.","'Typography' is defined but never used.","'handleSubmit' is assigned a value but never used.","'Snackbar' is defined but never used.","'IconButton' is defined but never used.","'withStyles' is defined but never used.","'makeStyles' is defined but never used.","'open1' is assigned a value but never used.","'setOpen1' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]